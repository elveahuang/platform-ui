var n=(e,t,i)=>new Promise((w,l)=>{var m=o=>{try{s(i.next(o))}catch(r){l(r)}},p=o=>{try{s(i.throw(o))}catch(r){l(r)}},s=o=>o.done?w(o.value):Promise.resolve(o.value).then(m,p);s((i=i.apply(e,t)).next())});import{W as a}from"./me-d8a6cee5.js";import"./index-f0e6fb06.js";import"./index-8bc34f43.js";import"./constant-72a8536f.js";import"./index-bc7afb30.js";import"./use-route-735a2ce1.js";import"./index-e3d78a4d.js";import"./index-e78f035f.js";import"./use-placeholder-eebb42fc.js";import"./on-popup-reopen-d8b196db.js";import"./index-e43d31ab.js";class c extends a{constructor(){super(),this._lastWindow=null}open(t){return n(this,null,function*(){this._lastWindow=window.open(t.url,t.windowName||"_blank")})}close(){return n(this,null,function*(){return new Promise((t,i)=>{this._lastWindow!=null?(this._lastWindow.close(),this._lastWindow=null,t()):i("No active window to close!")})})}}const g=new c;export{g as Browser,c as BrowserWeb};
