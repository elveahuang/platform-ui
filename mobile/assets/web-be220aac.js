var n=(e,t,i)=>new Promise((w,l)=>{var m=o=>{try{s(i.next(o))}catch(r){l(r)}},p=o=>{try{s(i.throw(o))}catch(r){l(r)}},s=o=>o.done?w(o.value):Promise.resolve(o.value).then(m,p);s((i=i.apply(e,t)).next())});import{W as a}from"./me-13043aeb.js";import"./index-2f4826c0.js";import"./index-8c839afb.js";import"./constant-72a8536f.js";import"./index-beaabd42.js";import"./use-route-fa3ddbce.js";import"./index-50e62c77.js";import"./index-ab4af570.js";import"./use-placeholder-17014ae7.js";import"./on-popup-reopen-9cb8fb53.js";import"./index-77a8136a.js";class c extends a{constructor(){super(),this._lastWindow=null}open(t){return n(this,null,function*(){this._lastWindow=window.open(t.url,t.windowName||"_blank")})}close(){return n(this,null,function*(){return new Promise((t,i)=>{this._lastWindow!=null?(this._lastWindow.close(),this._lastWindow=null,t()):i("No active window to close!")})})}}const g=new c;export{g as Browser,c as BrowserWeb};
