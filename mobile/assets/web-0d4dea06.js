var n=(e,t,i)=>new Promise((w,l)=>{var m=o=>{try{s(i.next(o))}catch(r){l(r)}},p=o=>{try{s(i.throw(o))}catch(r){l(r)}},s=o=>o.done?w(o.value):Promise.resolve(o.value).then(m,p);s((i=i.apply(e,t)).next())});import{W as a}from"./me-13ee31d9.js";import"./index-218e66ec.js";import"./index-a830bfed.js";import"./index-533f79af.js";import"./index-2b22063b.js";import"./use-route-13274ce5.js";import"./index-4c41113d.js";import"./use-placeholder-e3b05463.js";import"./on-popup-reopen-b755b120.js";import"./index-22610865.js";class c extends a{constructor(){super(),this._lastWindow=null}open(t){return n(this,null,function*(){this._lastWindow=window.open(t.url,t.windowName||"_blank")})}close(){return n(this,null,function*(){return new Promise((t,i)=>{this._lastWindow!=null?(this._lastWindow.close(),this._lastWindow=null,t()):i("No active window to close!")})})}}const P=new c;export{P as Browser,c as BrowserWeb};
