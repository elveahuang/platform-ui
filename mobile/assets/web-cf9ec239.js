var n=(e,t,i)=>new Promise((w,l)=>{var m=o=>{try{s(i.next(o))}catch(r){l(r)}},p=o=>{try{s(i.throw(o))}catch(r){l(r)}},s=o=>o.done?w(o.value):Promise.resolve(o.value).then(m,p);s((i=i.apply(e,t)).next())});import{W as a}from"./me-969312f9.js";import"./index-71b8ca85.js";/* empty css              */import"./index-7cfbb533.js";import"./use-route-2d377f03.js";import"./index-435fe099.js";import"./index-0fd8a282.js";import"./index-8787eadf.js";import"./use-placeholder-98cfd667.js";import"./index-9ef705d1.js";class c extends a{constructor(){super(),this._lastWindow=null}open(t){return n(this,null,function*(){this._lastWindow=window.open(t.url,t.windowName||"_blank")})}close(){return n(this,null,function*(){return new Promise((t,i)=>{this._lastWindow!=null?(this._lastWindow.close(),this._lastWindow=null,t()):i("No active window to close!")})})}}const P=new c;export{P as Browser,c as BrowserWeb};
